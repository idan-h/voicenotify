name: "Auto Build"

env:
  tag: auto-build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "app/**"
      - "build.gradle.kts"
      - "gradle.properties"
      - "settings.gradle.kts"
      - "!**/.gitignore"
      - "!app/src/*[Tt]est/**"

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache debug keystore
        id: debug-keystore-cache
        uses: actions/cache@v4
        with:
          path: ~/.config/.android/debug.keystore
          key: ${{ runner.os }}-debug-keystore

      - name: Create release keystore files
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -di > release.keystore
          echo "${{ secrets.KEYSTORE_PROPERTIES }}" > keystore.properties

      - name: Build
        id: build
        run: ./gradlew assemble

      - name: Update tag
        run: |
          git tag -d ${{ env.tag }} || true
          git push origin :refs/tags/${{ env.tag }} || true
          git tag ${{ env.tag }}
          git push origin ${{ env.tag }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ steps.build.outcome == 'success' }}
        with:
          name: "Auto build"
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: ${{ env.tag }}
          prerelease: true
          body: |
            Use at your own risk!
            These builds may be broken and some changes may lose settings or require clearing app data.
            If you have a final release installed and want to preserve its settings while testing this, you can install the debug build alongside it.
          generate_release_notes: true
          files: 'app/build/outputs/apk/**/*.apk'
